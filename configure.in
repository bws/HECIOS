dnl
dnl Process this file with autoconf to produce a configure script
dnl
AC_INIT(Hecios,0.0.0.0)

dnl
dnl Determine source and build directories
dnl
CONFIG_BUILD_DIR=`pwd`
CONFIG_PROJECT_RELATIVE_DIR="$srcdir"
CONFIG_PROJECT_DIR=`cd $srcdir; pwd`
AC_SUBST(CONFIG_BUILD_DIR)
AC_SUBST(CONFIG_PROJECT_DIR)

dnl
dnl Check for programs (needs check for install and ld with partial linking)
dnl
AC_PROG_CXX
AC_LANG_CPLUSPLUS

dnl 
dnl Check for C++ headers
dnl
AC_HEADER_STDC
AC_CHECK_HEADER([algorithm], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([cassert], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([cstddef], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([iostream], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([list], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([map], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([string], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))
AC_CHECK_HEADER([vector], 
                [], 
                AC_MSG_ERROR(Must include headers for libstdc++))

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T

dnl
dnl Checks for library functions.
dnl
AC_CHECK_FUNCS([memset])

dnl
dnl Use the OmNet++ distribution
dnl
AC_ARG_WITH([omnet],
            [  --with-omnet=<path>    Use OmNet++ installation at "path"],
            [omnet_dir=$withval],
            AC_MSG_FAILURE(--with-omnet must be set to the OmNet++ directory.))
if test x$withval = xyes ; then
    AC_MSG_ERROR(--with-omnet must be a given pathname)
else
    AC_SUBST(CONFIG_OMNET_DIR, "$omnet_dir")
fi

dnl
dnl Locate the XML library for use by Omnet
dnl
xml_library="none"
if test x$xml_library = xnone ; then
    AC_SEARCH_LIBS([xmlInitParser], [xml2], xml_library="-lxml2")
fi

if test x$xml_library = xnone ; then
    AC_SEARCH_LIBS([XML_ParserCreate], [expat], xml_library="-lexpat")
fi

if test x$xml_library = xnone ; then
    AC_MSG_ERROR(libxml2 or libexpat must be installed)
else
    AC_SUBST(CONFIG_XML_LIB, "$xml_library")
fi


dnl
dnl Sets the compilation options
dnl
AC_ARG_WITH([mode],
            [  --with-mode=<mode>    Specify a compile mode: release or debug],
            [comp_mode=$withval],
            [comp_mode=debug])
case "$comp_mode" in
    debug)
        dnl CONFIG_CXXFLAGS="-g -Wno-deprecated -Wno-unused -Wall -Werror -D_GLIBCXX_DEBUG"
	dnl CONFIG_LDFLAGS="-g -D_GLIBCXX_DEBUG"
        CONFIG_CXXFLAGS="-g -Wno-unused -Wall -Werror -ansi"
        CONFIG_UNSAFE_CXXFLAGS="-g" 
	CONFIG_LDFLAGS="-g"
        ;;
    release)
        CONFIG_CXXFLAGS="-O2 -DNDEBUG" 
        CONFIG_UNSAFE_CXXFLAGS="-O2 -DNDEBUG" 
	CONFIG_LDFLAGS=""
        ;;
    strict)
	CONFIG_CXXFLAGS="-g -Wno-deprecated -Wno-unused -Wall -Werror -ansi -pedantic"
        CONFIG_UNSAFE_CXXFLAGS="-g"
        CONFIG_LDFLAGS="-g"
        ;;
    *)
        AC_MSG_ERROR(Valid compilation modes are debug or release)
        ;;
esac
AC_SUBST(CONFIG_CXXFLAGS, "$CONFIG_CXXFLAGS")
AC_SUBST(CONFIG_UNSAFE_CXXFLAGS, "$CONFIG_UNSAFE_CXXFLAGS")
AC_SUBST(CONFIG_LDFLAGS, "$CONFIG_LDFLAGS")

dnl
dnl Set the default installation prefix
dnl
install_prefix='${HOME}/software/hecios'
AC_PREFIX_DEFAULT("$install_prefix")
dnl This shouldn't be needed, but its eating the enclosing {}'s otherwise 
AC_SUBST(prefix, "$install_prefix")

dnl
dnl Generate output
dnl
AC_OUTPUT(Makefile)
